module.exports = {
    name: 'admin_profiles',
    async execute(interaction, client) {
        await interaction.deferUpdate();
        const id = interaction.fields.fields.get('id').value;

        let dsUser;
        try {
            dsUser = await client.users.fetch(id);
        } catch(e) {
            return interaction.editReply({
                embeds: [
                    {
                        title: "–û—à–∏–±–∫–∞",
                        description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!"
                    }
                ],
                ephemeral: true
            })
        }

        let user = getUserById(id);

        let fields = [
            {
                name: "–ë–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞",
                value: "```"+ user.balance +" RUB```",
                inline: true
            },
            {
                name: "–í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ",
                value: "```"+ user.spended +" RUB```",
                inline: true
            },
            {
                name: "–ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤",
                value: "```"+ user.buyings +" —à—Ç.```",
                inline: true
            }
        ];

        interaction.editReply({
            embeds: [
                {
                    title: "–ü—Ä–æ—Ñ–∏–ª—å",
                    description: `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ <@${id}>`,
                    fields: fields,
                    thumbnail: {
                        url: dsUser.avatarURL()
                    }
                }
            ],
            components: [
                {
                    type: 1,
                    components: [
                        {
                            type: 2,
                            label: "–ù–∞–∑–∞–¥",
                            emoji: "üîô",
                            style: 1,
                            custom_id: "admin_panel"
                        }
                    ]
                }
            ]
        });
    }
}